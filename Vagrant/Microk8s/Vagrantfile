Vagrant.configure("2") do |config|
N = 3

  config.vm.box = "ubuntu/focal64"
  config.vm.provider "virtualbox" do |vb|
    vb.customize ["modifyvm", :id, "--uart1", "0x3F8", "4"]
    vb.customize ["modifyvm", :id, "--uartmode1", "file", File::NULL]
  end

  config.vm.define "nodemaster" do |nodemaster|
    nodemaster.vm.provider "virtualbox" do |vb|
      vb.memory = 2048
      vb.cpus = 1
      vb.name = "nodemaster"
    end
    nodemaster.vm.hostname = "nodemaster"
    nodemaster.vm.network "public_network", auto_config: false
  
    # defaulting router
    nodemaster.vm.provision "shell", inline: "ip addr add 192.168.15.100/24 dev enp0s8"
    nodemaster.vm.provision "shell", inline: "ip link set dev enp0s8 up"
    nodemaster.vm.provision "shell", inline: "ip route flush 0/0"
    nodemaster.vm.provision "shell", inline: "ip route add default via 192.168.15.1 dev enp0s8"
    nodemaster.vm.provision "shell", inline: "ip route del 10.0.2.2/32"
  end

  (1..N).each do |i|
    config.vm.define "node#{i}" do |node|
      node.vm.provider "virtualbox" do |vb|
        vb.memory = 1536
        vb.cpus = 1
        vb.name = "node#{i}"
      end
      node.vm.network "public_network", auto_config: false
      node.vm.hostname = "node#{i}"

      # defaulting router
      node.vm.provision "shell", inline: "ip addr add 192.168.15.#{i + 100}/24 dev enp0s8"
      node.vm.provision "shell", inline: "ip link set dev enp0s8 up"
      node.vm.provision "shell", inline: "ip route flush 0/0"
      node.vm.provision "shell", inline: "ip route add default via 192.168.15.1 dev enp0s8"
      node.vm.provision "shell", inline: "ip route del 10.0.2.2/32"
    end
  end

  config.vm.define "ansible" do |ansible|
    ansible.vm.provider "virtualbox" do |vb|
      vb.memory = 1024
      vb.cpus = 1
      vb.name = "AnsibleVM"
    end
    ansible.vm.network "public_network", ip: "192.168.15.110"

    ansible.vm.provision "shell", path: "provisioner/ansible_vm_script.sh"

    ansible.vm.provision "update_vms", type: "ansible_local" do |ansible|
      ansible.playbook = "./provisioner/ansible_vm_updates.yml"
      ansible.inventory_path = "./provisioner/inventory.txt"
      ansible.limit = "all"
      ansible.verbose = false
      ansible.config_file="./provisioner/ansible.cfg"
    end

    ansible.vm.provision "setup_k8s", type: "ansible_local" do |ansible|
     ansible.playbook = "./provisioner/ansible_vm_playbook.yml"
      ansible.inventory_path = "./provisioner/inventory.txt"
      ansible.limit = "all"
      ansible.verbose = false
      ansible.config_file="./provisioner/ansible.cfg"
    end
  end
  
end